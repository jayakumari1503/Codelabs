// Generated by view binder compiler. Do not edit!
package com.streamliners.hellosharedprefs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.streamliners.hellosharedprefs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button blackButton;

  @NonNull
  public final Button blueButton;

  @NonNull
  public final Button countButton;

  @NonNull
  public final Button greenButton;

  @NonNull
  public final TextView initialTextView;

  @NonNull
  public final ConstraintLayout layout;

  @NonNull
  public final ConstraintLayout layout2;

  @NonNull
  public final Button redButton;

  @NonNull
  public final Button resetButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button blackButton,
      @NonNull Button blueButton, @NonNull Button countButton, @NonNull Button greenButton,
      @NonNull TextView initialTextView, @NonNull ConstraintLayout layout,
      @NonNull ConstraintLayout layout2, @NonNull Button redButton, @NonNull Button resetButton) {
    this.rootView = rootView;
    this.blackButton = blackButton;
    this.blueButton = blueButton;
    this.countButton = countButton;
    this.greenButton = greenButton;
    this.initialTextView = initialTextView;
    this.layout = layout;
    this.layout2 = layout2;
    this.redButton = redButton;
    this.resetButton = resetButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.black_button;
      Button blackButton = rootView.findViewById(id);
      if (blackButton == null) {
        break missingId;
      }

      id = R.id.blue_button;
      Button blueButton = rootView.findViewById(id);
      if (blueButton == null) {
        break missingId;
      }

      id = R.id.count_button;
      Button countButton = rootView.findViewById(id);
      if (countButton == null) {
        break missingId;
      }

      id = R.id.green_button;
      Button greenButton = rootView.findViewById(id);
      if (greenButton == null) {
        break missingId;
      }

      id = R.id.initial_textView;
      TextView initialTextView = rootView.findViewById(id);
      if (initialTextView == null) {
        break missingId;
      }

      id = R.id.layout;
      ConstraintLayout layout = rootView.findViewById(id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.layout2;
      ConstraintLayout layout2 = rootView.findViewById(id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.red_button;
      Button redButton = rootView.findViewById(id);
      if (redButton == null) {
        break missingId;
      }

      id = R.id.reset_button;
      Button resetButton = rootView.findViewById(id);
      if (resetButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, blackButton, blueButton,
          countButton, greenButton, initialTextView, layout, layout2, redButton, resetButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
